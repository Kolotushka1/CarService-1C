Движения.Продажи.Записать();
	Движения.Продажи.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.ТоварыНаСкладах.Записывать = Истина;
	
	Движения.УчетЗатрат.Записать();
	Движения.УчетЗатрат.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Реализация.Склад КАК Склад,
	               |	РеализацияТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(РеализацияТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТовары.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.Реализация.Товары КАК РеализацияТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Реализация КАК Реализация
	               |		ПО РеализацияТовары.Ссылка = Реализация.Ссылка
	               |ГДЕ
	               |	РеализацияТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТовары.Номенклатура,
	               |	Реализация.Склад
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияУслуги.Услуга,
	               |	NULL,
	               |	СУММА(РеализацияУслуги.Количество),
	               |	СУММА(РеализацияУслуги.Сумма)
	               |ИЗ
	               |	Документ.Реализация.Услуги КАК РеализацияУслуги
	               |ГДЕ
	               |	РеализацияУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияУслуги.Услуга
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоТовар,
	               |	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	               |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	               |	ВТ_Товары.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				(Номенклатура, Склад) В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Номенклатура,
	               |						ВТ_Товары.Склад
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТоварыНаСкладахОстатки.СрокГодности
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0;
			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			Если Превышение > 0 Тогда
				Сообщение = Новый СообщениеПользователю; 
				Отказ = Истина;
	            Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
	            Сообщение.Сообщить();
			КонецЕсли;
			
			Если Отказ Тогда
		            Продолжить;
			КонецЕсли;
				
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл	           
				Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
	            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
	            Движение.Период = Дата;
	            Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
	            Движение.Склад = ВыборкаДетальные.Склад;
	            Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
	            Движение.Количество = Списываем;
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
	                Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
	            Иначе
	                Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
	            КонецЕсли;

	            ОсталосьСписать = ОсталосьСписать - Списываем;
	            СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
	            
			КонецЦикла;
			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата; 
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		Иначе
			Движение = Движения.ЗаказыКлиентов.Добавить();
	        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	        Движение.Период = Дата;
			Движение.Клиент = Контрагент;
			Движение.ЗаказКлиента = ДокументОснование;
			Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
	    Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
	    Движение.Сотрудник = Сотрудник;
	    Движение.Контрагент = Контрагент;
	    Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
	КонецЦикла;
	
	Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина;
	Движения.ЗаказыКлиентов.Записать();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ЗаказыКлиентовОстатки.Клиент КАК Клиент,
	|	ЗаказыКлиентовОстатки.ЗаказКлиента КАК ЗаказКлиента
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(&МоментВремени, ЗаказКлиента = &ДокументОснование) КАК ЗаказыКлиентовОстатки";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
	    Отказ = Истина;
	    Выборка = Результат.Выбрать();
	    Пока Выборка.Следующий() Цикл
	        Сообщение = Новый СообщениеПользователю;
	        Сообщение.Текст = СтрШаблон("Услуга ""%1"" для клиента ""%2""  на дату ""%3"" уже была обработана или не была найдена такая запись!", Выборка.НоменклатураПредставление, Выборка.КлиентПредставление, Формат(Выборка.ДатаЗаписи, "ДФ=dd.MM.yy"));
	        Сообщение.Сообщить();
	    КонецЦикла;
	КонецЕсли;